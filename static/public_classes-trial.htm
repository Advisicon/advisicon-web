<!doctype html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!-- Consider adding a manifest.appcache: h5bp.com/d/Offline -->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
  <meta charset="utf-8">
	<meta name="google-site-verification" content="jdLTywbexVH-8P7WmQp_agAuQGsl84-3bwwHwlrAtbs" />
	<meta name="verify-v1" content="Mn4HP1CuzeMuTt3AIDZiBOhx9QSkzo2pDByQ1HaTMKk=" />

  <!-- Use the .htaccess and remove these lines to avoid edge case issues.
       More info: h5bp.com/i/378 -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="keywords" content="Project Management, Knowledge Management, Information Technology, IT, Microsoft Project Server, Microsoft Project, Dynamic scheduling, PMI, Microsoft Office, public classes, education, teaching, training, Advisicon" />
	<meta itemprop="name" content="Advisicon Public Classes" />
	<meta name="description" itemprop="description" content="Find our currently available public classes." />

	<title>Public Classes | Advisicon</title>

  <!-- Mobile viewport optimized: h5bp.com/viewport -->
  <meta name="viewport" content="width=device-width">

  <!-- Place favicon.ico and apple-touch-icon.png in the root directory: mathiasbynens.be/notes/touch-icons -->

	<link rel="stylesheet" href="/styles/css/style.css" />

  <!-- More ideas for your <head> here: h5bp.com/d/head-Tips -->

  <!-- All JavaScript at the bottom, except this Modernizr build.
       Modernizr enables HTML5 elements & feature detects for optimal performance.
       Create your own custom Modernizr build: www.modernizr.com/download/ -->
  <script src="/js/libs/modernizr-2.5.3.min.js"></script> <!-- Modernizr. Super sweet. Keep this in the head. -->
  <script src="/js/libs/css3-mediaqueries.js"></script>
</head>
<body>
  <!-- Prompt IE 6 users to install Chrome Frame. Remove this if you support IE 6.
       chromium.org/developers/how-tos/chrome-frame-getting-started -->
  <!--[if lt IE 8]><p class=chromeframe>Your browser is <em>ancient!</em> <a href="http://browsehappy.com/">Upgrade to a different browser</a> or <a href="http://www.google.com/chromeframe/?redirect=true">install Google Chrome Frame</a> to experience this site.</p><![endif]-->
  <header>

  </header>
  <div role="main">
<div id="content">
		<img border="0"  src="/pix/advisicon_banner-012709.jpg" alt="Advisicon, Inc." id="advisiconBanner" width="950" height="110" usemap="#Map" />
		<!-- #include virtual="/include/topNavTrial.htm" -->
		<!-- #include virtual="/include/navAndCred.htm" -->
		<aside id="secondaryContent">
			<!-- #include virtual="/include/socialMediaProfiles.htm" -->
			<div class="rPopBox">
				<h3>Recent Blog Posts</h3>
				<ul id="feedContent"></ul>
			</div>
			<!-- #include virtual="/include/featuredTools.htm" -->
		</aside>
		<section id="main">
			<h1>Public Courses</h1>
				<p>Invest in your project management career!</p>
			<h2>Current Course Offerings</h2>
			<p>Find all of <a href="http://advisicon.eventbrite.com/" title="Advisicon&rsquo;s events on Eventbrite">our current public course offerings</a> on our Eventbrite page.</p>
				<%@LANGUAGE=VBSCRIPT%>
				<%
				sub process_html(up_http) 
					dim xmlhttp : set xmlhttp = createobject("msxml2.xmlhttp.3.0")
					xmlhttp.open "get", up_http, false
					xmlhttp.send
					
					dim response_array : response_array = split(xmlhttp.responseText, "<item>")
					
					dim re : Set re = new regexp 'defines the variable re and makes it a new regular expression
						re.Pattern = "<title>.*</title>" 'set up a regular expression to use for searching the items in our array. We're using it to search for the title tags.
						re.IgnoreCase = True 'regular expression search is case insensitive. Don't know why we can't just do this in the regexp itself.
						re.Global = True 'makes sure match applies to the entire string
					
				'	response.write(response_array(1))
					dim i 'declare a new variable, i. We'll use this to step through the items in the array
					response.write("<table><tbody><tr><th>Course</th><th>Location</th><th>Date</th></tr></tbody>") 'build the table header
					for i = 1 to ubound(response_array) 'steps through the items in the array, starting at the position response_array(1) and continuing to the end of response_array. ubound seems to act a bit like .length, len(), etc. We start at position 1 instead of 0 so that we don't pick up matches from the stuff in the <channel> before the first <item>
						if re.Test(response_array(i)) then 'if the regular expression pattern defined earlier as re is found within the array item then do the following. re.Test() returns a boolean.
							Set Matches = re.Execute(response_array(i)) 'make a new array, this one called Matches. Created from the current item in response_array.
							for each Match in Matches 'for each item in this new Matches array ...
								title = Replace(Match.Value,"<title>","") 'remove the opening <title>
								title = Replace(title,"</title>","") 'remove the closing </title> tag
								dim reLink : Set reLink = new regexp 'new regular expression, this one is called reLink. We'll use it to search for the <link> tags
									reLink.Pattern = "<link>.*</link>" 'looking for the <link> tags
									reLink.IgnoreCase = True 'case insensitive
									reLink.Global = True 'search entire string
									Set linkMatches = reLink.Execute(response_array(i)) 'make a new array called linkMatches from the current item in response_array()
										for each linkMatch in linkMatches
											link = Replace(linkMatch.Value,"<link>","") 'remove the opening <link>
											link = Replace(link,"</link>", "") 'remove the closing </link>
										Next
								dim reStartDate : Set reStartDate = new regexp 'new regular expression called reDate for finding the date of the event
									reStartDate.Pattern = "((January|February|March|April|June|July|August|September|October|November|December)\s+(\d+), (\d+)\s+(at|from)\s+\d+:\d\d\s+(a|p)m\s+(<span\sclass=.pipe..*>-|to))|Multiple Dates"'(\b.*\b).?\s+"'(\b.*\b)\s+(\d+).?\s+(\d+).*\-.*"
									reStartDate.IgnoreCase = True
									reStartDate.Multiline = True
									reStartDate.Global = True
									dim reDate : Set reDate = new regexp
										reDate.Pattern = "((January|February|March|April|June|July|August|September|October|November|December)\s+(\d+), (\d+))|Multiple Dates"
										reDate.IgnoreCase = True
										reDate.Multiline = True
										reDate.Global = True
										Set startDateMatches = reStartDate.Execute(response_array(i))
											for each startDateMatch in startDateMatches
												Set dateMatches = reDate.Execute(startDateMatch)
													for each dateMatch in dateMatches
														eventDate = dateMatch.Value
													Next
											Next
								dim reLocation : Set reLocation = new regexp
									reLocation.Pattern = "<b>(.*)<\/b><br>(.*)<br>(.*)<"   '"Where:.*\n.*<b>(.*)<\/b><br>(.*)<br>(.*)<br>[\n.*]*"
									reLocation.IgnoreCase = True
									reLocation.Multiline = True
									reLocation.Global = True
									dim reBizLocation : Set reBizLocation = new regexp
										reBizLocation.Pattern = "<b>(.*)<\/b>"
										reBizLocation.IgnoreCase = True
									dim reAddressLocation : Set reAddressLocation = new regExp
										reAddressLocation.Pattern = "<br>(.*)<br>(.*)"
										reAddressLocation.IgnoreCase = True
										reAddressLocation.Multiline = True
										Set locationMatches = reLocation.Execute(response_array(i))
											for each locationMatch in locationMatches
												Set bizLocationMatches = reBizLocation.Execute(locationMatch.Value)
													for each bizLocationMatch in bizLocationMatches
														venue = Replace(bizLocationMatch.Value,"<B>","")
														venue = Replace(venue,"</B>","")
													Next
												Set addressLocationMatches = reAddressLocation.Execute(locationMatch.Value)
													for each addressLocationMatch in addressLocationMatches
														eventAddress = Replace(addressLocationMatch.Value,"<BR>"," ")
														eventAddress = Replace(eventAddress," ","+",2)
														eventAddress = Replace(eventAddress,"<","")
													Next
											'	dim bizMap
											'	bizMap = "http://maps.google.com/maps?q=" & eventAddress
											'	dim eventLocation
											'	eventLocation = "<a href='" & bizMap & "' title='Find " & bizLocation & " on Google Maps>"& bizLocation &"</a>"
											Next
								
								response.write("<tr><td><a href='" & link & "' title='Register for &ldquo;" & title & "&rdquo; on Eventbrite' class='courseTitle'>" & title & "</a></td><td><a href='http://maps.google.com/maps?q=" & eventAddress & "' title='Find " & venue & " on Google Maps'>"& venue & "</a></td><td>" & eventDate & "</td></tr>") 'build the table row for this event
							Next
						else
							response.write("<p>I couldn't find the title.</p>")
						end if
					next 'use a for loop to use the regular expression on the array. The output from the loop will be the line(s) containing the search pattern
					response.write("</table>") 'build the end tag for the table
					
					set re = nothing
					set eventDate = nothing
					set eventAddress = nothing
					set addressLocationMatches = nothing
					set bizLocationMatches = nothing
					set reAddressLocation = nothing
					set locationMatches = nothing
					set reLocation = nothing
					set reBizLocation = nothing
					set xmlhttp = nothing
					
				end sub 'free up any memory used by the process
				
				process_html("http://www.eventbrite.com/rss/user_list_events/35721498302") 'point the subprocess to the webpage you want to access
				%>

		</section>
	</div> <!-- END #content -->

  </div>
  <footer>
	<!-- #include virtual="/include/footer.htm" -->

  </footer>
<map name="Map" id="Map">
  <area shape="rect" coords="858,21,936,99" href="/" alt="Advisicon Home" />
  <area shape="rect" coords="860,22,861,24" href="#" alt="Advisicon" />
</map>


  <!-- JavaScript at the bottom for fast page loading -->

  <!-- Grab Google CDN's jQuery, with a protocol relative URL; fall back to local if offline -->
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.0/jquery.min.js"></script>
  <script>window.jQuery || document.write('<script src="js/libs/jquery-1.6.0.min.js"><\/script>')</script>

  <!-- scripts concatenated and minified via build script -->
  <script src="/js/plugins.js"></script>
  <script src="/js/script.js"></script>
	<script type="text/javascript" src="https://www.google.com/jsapi"></script> <!-- Script for loading the google feed API. -->
	<script type="text/javascript" src="/Scripts/loadGoogleFeed.js"></script>
	<script src="/Scripts/twitter.js" type="text/javascript"></script> <!-- loads tweets. Since this is *kinda* producing content, leaving in the head too. Now moved to bottom -->
	<!-- <script type="text/javascript" src="/Scripts/loadPublicEvents.js"></script> --> <!-- To populate the events list from eventbrite... no longer neccessary now that we're doing it server side -->
	<script src="/Scripts/publicCourseExpander.js" type="text/javascript"></script>
<script src="/jscript/jquery.easing.1.3.js" type="text/javascript"></script> <!-- I believe this is for animating the slides in that (ridiculous) header -->
<script src="/jscript/2/jquery.hslides.js" type="text/javascript"></script> <!-- Part of the slide control in the header -->
<!-- <script src="jscript/2/jquery.hoverintent.js" type="text/javascript"></script> --> <!-- Not really sure why we are using this. Doesn't seem to apply to anything we've got going on this page at the moment. Likely useless. -->
<script src="/jscript/2/jquery.innerfade.js" type="text/javascript"></script> <!-- Animates the fade in/fade out of book in the "Featured Books section" -->
<script src="/Scripts/frontPageSlideshowHeader.js" type="text/javascript"></script> <!-- Controls the display of that silly banner at the top of the index page. It sizes all of the slides the same [Jeff] -->
<script src="/Scripts/featuredProducts.js" type="text/javascript"></script> <!-- Controls the slideshow action of fading from book to book in the "Featured Books" section of the index page [Jeff] -->
<script src="/Scripts/googlePlusOneButton.js" type="text/javascript"></script><!-- Render call for the google +1 link [Jeff] -->
  <!-- end scripts -->

  <!-- Asynchronous Google Analytics snippet. Change UA-XXXXX-X to be your site's ID.
       mathiasbynens.be/notes/async-analytics-snippet -->
	<script src="/Scripts/rootGoogleAnalytics.js" type="text/javascript"></script>
	
</body>
</html>